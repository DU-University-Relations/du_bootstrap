name: DU Bootstrap Theme Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout theme
        uses: actions/checkout@v4
        with:
          path: theme

      - name: Create test directory
        run: |
          mkdir drupal-test
          cd drupal-test

      - name: Install DDEV
        working-directory: drupal-test
        run: |
          curl -fsSL https://ddev.com/install.sh | bash
          ddev --version

      - name: Setup Docker
        working-directory: drupal-test
        run: |
          docker --version
          docker compose version

      - name: Configure and start DDEV
        working-directory: drupal-test
        run: |
          ddev config --project-type=drupal10 --docroot=web --create-docroot
          ddev start

      - name: Create Drupal Project
        working-directory: drupal-test
        run: |
          ddev composer create --no-install drupal/recommended-project:^10

          # Clone the main repository to get composer.json
          git clone https://github.com/University-of-Denver/drupal-composer-managed.git /tmp/drupal-composer-managed

          # Copy the repositories section from the main composer.json
          ddev composer config --json extra.composer-exit-on-patch-failure "true"
          ddev composer config repositories.drupal composer https://packages.drupal.org/8

          # Add all the package repositories from the main repo
          ddev composer config repositories.codemirror '{"type": "package", "package": {"name": "codemirror/codemirror", "version": "5.65.12", "type": "drupal-library", "extra": {"installer-name": "codemirror"}, "dist": {"url": "https://github.com/components/codemirror/archive/refs/tags/5.65.12.zip", "type": "zip"}, "license": "MIT"}}'

          # Configure composer
          ddev composer config minimum-stability dev
          ddev composer config prefer-stable true
          ddev composer config allow-plugins.drupal/core-composer-scaffold true
          ddev composer config allow-plugins.composer/installers true
          ddev composer config allow-plugins.drupal/core-project-message true
          ddev composer config allow-plugins.cweagans/composer-patches true
          ddev composer config allow-plugins.phpstan/extension-installer true
          ddev composer config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
          ddev composer config allow-plugins.php-http/discovery true
          ddev composer config allow-plugins.pantheon-systems/upstream-management true

          # Install core dependencies first
          ddev composer require --no-update drupal/core-recommended:^10
          ddev composer require --no-update drupal/core-composer-scaffold:^10
          ddev composer require --no-update drush/drush:^13

          # Install required modules for DU Core
          ddev composer require --no-update \
            drupal/admin_toolbar \
            drupal/components \
            drupal/config_filter \
            drupal/config_ignore \
            drupal/config_split \
            drupal/paragraphs \
            drupal/pathauto \
            drupal/webform \
            drupal/bootstrap:^5.0

          # Update everything
          ddev composer update --with-all-dependencies

          # Clean up
          rm -rf /tmp/drupal-composer-managed

      - name: Setup Drupal with DU Core dependencies
        working-directory: drupal-test
        run: |
          # Clone the main repository to get composer.json
          git clone https://github.com/University-of-Denver/drupal-composer-managed.git /tmp/drupal-composer-managed

          # Copy the composer.json and composer.lock files
          cp /tmp/drupal-composer-managed/composer.json ./composer.json
          cp /tmp/drupal-composer-managed/composer.lock ./composer.lock || true

          # Configure composer
          ddev composer config minimum-stability dev
          ddev composer config prefer-stable true
          ddev composer config allow-plugins.drupal/core-composer-scaffold true
          ddev composer config allow-plugins.composer/installers true
          ddev composer config allow-plugins.drupal/core-project-message true

          # Install dependencies from the main repo's composer.json
          ddev composer install

          # Clean up
          rm -rf /tmp/drupal-composer-managed

      - name: Setup DU Core Profile
        working-directory: drupal-test
        run: |
          ddev exec mkdir -p web/profiles/custom
          ddev exec cp -r /tmp/drupal-composer-managed/web/profiles/custom/ducore web/profiles/custom/

      - name: Setup Drupal
        working-directory: drupal-test
        run: |
          ddev exec mkdir -p web/sites/default/files
          ddev exec chmod 777 web/sites/default/files
          ddev exec cp web/sites/default/default.settings.php web/sites/default/settings.php
          ddev exec chmod 777 web/sites/default/settings.php
          ddev exec "echo '\$databases[\"default\"][\"default\"] = [\"driver\" => \"mysql\",\"database\" => \"db\",\"username\" => \"db\",\"password\" => \"db\",\"host\" => \"db\",\"port\" => \"3306\"];' >> web/sites/default/settings.php"

      - name: Install site
        working-directory: drupal-test
        run: |
          ddev exec drush site:install ducore --db-url=mysql://db:db@db:3306/db -y
          ddev drush status
          ddev drush wd-show

      - name: Check theme
        working-directory: drupal-test
        run: |
          ddev drush theme:enable du_bootstrap
          ddev drush config-get system.theme default
